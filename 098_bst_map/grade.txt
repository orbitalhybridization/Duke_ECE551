Grading at 11/15/2021:23:27:04.498614
For commit ID 32a0108695e46f395d9476beaed25e7835801f18
Grading at Mon Nov 15 18:26:54 EST 2021
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52088== Memcheck, a memory error detector
==52088== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52088== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52088== Command: ./test.1
==52088== Parent PID: 52087
==52088== 
==52088== Invalid read of size 8
==52088==    at 0x10AA57: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.1)
==52088==    by 0x109902: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.1)
==52088==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==52088== 
==52088== 
==52088== Process terminating with default action of signal 11 (SIGSEGV)
==52088==  Access not within mapped region at address 0x10
==52088==    at 0x10AA57: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.1)
==52088==    by 0x109902: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.1)
==52088==  If you believe this happened as a result of a stack
==52088==  overflow in your program's main thread (unlikely but
==52088==  possible), you can try to increase the size of the
==52088==  main thread stack using the --main-stacksize= flag.
==52088==  The main thread stack size used in this run was 8388608.
==52088== 
==52088== HEAP SUMMARY:
==52088==     in use at exit: 200 bytes in 9 blocks
==52088==   total heap usage: 77 allocs, 68 frees, 81,704 bytes allocated
==52088== 
==52088== LEAK SUMMARY:
==52088==    definitely lost: 0 bytes in 0 blocks
==52088==    indirectly lost: 0 bytes in 0 blocks
==52088==      possibly lost: 0 bytes in 0 blocks
==52088==    still reachable: 200 bytes in 9 blocks
==52088==         suppressed: 0 bytes in 0 blocks
==52088== Reachable blocks (those to which a pointer was found) are not shown.
==52088== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52088== 
==52088== For counts of detected and suppressed errors, rerun with: -v
==52088== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52117== Memcheck, a memory error detector
==52117== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52117== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52117== Command: ./test.2
==52117== Parent PID: 52116
==52117== 
==52117== Invalid read of size 8
==52117==    at 0x10AE35: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.2)
==52117==    by 0x1099AE: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.2)
==52117==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==52117== 
==52117== 
==52117== Process terminating with default action of signal 11 (SIGSEGV)
==52117==  Access not within mapped region at address 0x30
==52117==    at 0x10AE35: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.2)
==52117==    by 0x1099AE: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.2)
==52117==  If you believe this happened as a result of a stack
==52117==  overflow in your program's main thread (unlikely but
==52117==  possible), you can try to increase the size of the
==52117==  main thread stack using the --main-stacksize= flag.
==52117==  The main thread stack size used in this run was 8388608.
==52117== 
==52117== HEAP SUMMARY:
==52117==     in use at exit: 519 bytes in 14 blocks
==52117==   total heap usage: 157 allocs, 143 frees, 84,104 bytes allocated
==52117== 
==52117== LEAK SUMMARY:
==52117==    definitely lost: 0 bytes in 0 blocks
==52117==    indirectly lost: 0 bytes in 0 blocks
==52117==      possibly lost: 0 bytes in 0 blocks
==52117==    still reachable: 519 bytes in 14 blocks
==52117==         suppressed: 0 bytes in 0 blocks
==52117== Reachable blocks (those to which a pointer was found) are not shown.
==52117== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52117== 
==52117== For counts of detected and suppressed errors, rerun with: -v
==52117== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52139== Memcheck, a memory error detector
==52139== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52139== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52139== Command: ./test.3
==52139== Parent PID: 52138
==52139== 
==52139== Invalid read of size 8
==52139==    at 0x10AECD: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.3)
==52139==    by 0x1099AE: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.3)
==52139==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==52139== 
==52139== 
==52139== Process terminating with default action of signal 11 (SIGSEGV)
==52139==  Access not within mapped region at address 0x38
==52139==    at 0x10AECD: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.3)
==52139==    by 0x1099AE: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.3)
==52139==  If you believe this happened as a result of a stack
==52139==  overflow in your program's main thread (unlikely but
==52139==  possible), you can try to increase the size of the
==52139==  main thread stack using the --main-stacksize= flag.
==52139==  The main thread stack size used in this run was 8388608.
==52139== 
==52139== HEAP SUMMARY:
==52139==     in use at exit: 575 bytes in 14 blocks
==52139==   total heap usage: 177 allocs, 163 frees, 84,704 bytes allocated
==52139== 
==52139== LEAK SUMMARY:
==52139==    definitely lost: 0 bytes in 0 blocks
==52139==    indirectly lost: 0 bytes in 0 blocks
==52139==      possibly lost: 0 bytes in 0 blocks
==52139==    still reachable: 575 bytes in 14 blocks
==52139==         suppressed: 0 bytes in 0 blocks
==52139== Reachable blocks (those to which a pointer was found) are not shown.
==52139== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52139== 
==52139== For counts of detected and suppressed errors, rerun with: -v
==52139== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52165== Memcheck, a memory error detector
==52165== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52165== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52165== Command: ./test.4
==52165== Parent PID: 52164
==52165== 
==52165== Invalid read of size 8
==52165==    at 0x10AFD2: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165==    by 0x109B70: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==52165== 
==52165== 
==52165== Process terminating with default action of signal 11 (SIGSEGV)
==52165==  Access not within mapped region at address 0x28
==52165==    at 0x10AFD2: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165==    by 0x109B70: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165==  If you believe this happened as a result of a stack
==52165==  overflow in your program's main thread (unlikely but
==52165==  possible), you can try to increase the size of the
==52165==  main thread stack using the --main-stacksize= flag.
==52165==  The main thread stack size used in this run was 8388608.
==52165== 
==52165== HEAP SUMMARY:
==52165==     in use at exit: 312 bytes in 7 blocks
==52165==   total heap usage: 77 allocs, 70 frees, 82,504 bytes allocated
==52165== 
==52165== 56 bytes in 1 blocks are definitely lost in loss record 5 of 6
==52165==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==52165==    by 0x10AE02: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165==    by 0x10997A: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.4)
==52165== 
==52165== LEAK SUMMARY:
==52165==    definitely lost: 56 bytes in 1 blocks
==52165==    indirectly lost: 0 bytes in 0 blocks
==52165==      possibly lost: 0 bytes in 0 blocks
==52165==    still reachable: 256 bytes in 6 blocks
==52165==         suppressed: 0 bytes in 0 blocks
==52165== Reachable blocks (those to which a pointer was found) are not shown.
==52165== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52165== 
==52165== For counts of detected and suppressed errors, rerun with: -v
==52165== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52176== Memcheck, a memory error detector
==52176== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52176== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52176== Command: ./test.5
==52176== Parent PID: 52175
==52176== 
==52176== Invalid read of size 8
==52176==    at 0x10B295: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176==    by 0x109B8D: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176==  Address 0x40 is not stack'd, malloc'd or (recently) free'd
==52176== 
==52176== 
==52176== Process terminating with default action of signal 11 (SIGSEGV)
==52176==  Access not within mapped region at address 0x40
==52176==    at 0x10B295: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176==    by 0x109B8D: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176==  If you believe this happened as a result of a stack
==52176==  overflow in your program's main thread (unlikely but
==52176==  possible), you can try to increase the size of the
==52176==  main thread stack using the --main-stacksize= flag.
==52176==  The main thread stack size used in this run was 8388608.
==52176== 
==52176== HEAP SUMMARY:
==52176==     in use at exit: 575 bytes in 12 blocks
==52176==   total heap usage: 169 allocs, 157 frees, 84,980 bytes allocated
==52176== 
==52176== 111 (80 direct, 31 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 9
==52176==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==52176==    by 0x10B020: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176==    by 0x109976: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.5)
==52176== 
==52176== LEAK SUMMARY:
==52176==    definitely lost: 80 bytes in 1 blocks
==52176==    indirectly lost: 31 bytes in 1 blocks
==52176==      possibly lost: 0 bytes in 0 blocks
==52176==    still reachable: 464 bytes in 10 blocks
==52176==         suppressed: 0 bytes in 0 blocks
==52176== Reachable blocks (those to which a pointer was found) are not shown.
==52176== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52176== 
==52176== For counts of detected and suppressed errors, rerun with: -v
==52176== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52187== Memcheck, a memory error detector
==52187== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52187== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52187== Command: ./test.6
==52187== Parent PID: 52186
==52187== 
==52187== Invalid read of size 8
==52187==    at 0x10B32D: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187==    by 0x109B8D: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187==  Address 0x48 is not stack'd, malloc'd or (recently) free'd
==52187== 
==52187== 
==52187== Process terminating with default action of signal 11 (SIGSEGV)
==52187==  Access not within mapped region at address 0x48
==52187==    at 0x10B32D: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187==    by 0x109B8D: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187==  If you believe this happened as a result of a stack
==52187==  overflow in your program's main thread (unlikely but
==52187==  possible), you can try to increase the size of the
==52187==  main thread stack using the --main-stacksize= flag.
==52187==  The main thread stack size used in this run was 8388608.
==52187== 
==52187== HEAP SUMMARY:
==52187==     in use at exit: 615 bytes in 12 blocks
==52187==   total heap usage: 189 allocs, 177 frees, 85,580 bytes allocated
==52187== 
==52187== 119 (88 direct, 31 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 9
==52187==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==52187==    by 0x10B07A: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187==    by 0x109976: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.6)
==52187== 
==52187== LEAK SUMMARY:
==52187==    definitely lost: 88 bytes in 1 blocks
==52187==    indirectly lost: 31 bytes in 1 blocks
==52187==      possibly lost: 0 bytes in 0 blocks
==52187==    still reachable: 496 bytes in 10 blocks
==52187==         suppressed: 0 bytes in 0 blocks
==52187== Reachable blocks (those to which a pointer was found) are not shown.
==52187== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52187== 
==52187== For counts of detected and suppressed errors, rerun with: -v
==52187== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52217== Memcheck, a memory error detector
==52217== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52217== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52217== Command: ./test.7
==52217== Parent PID: 52216
==52217== 
==52217== Invalid read of size 8
==52217==    at 0x10B039: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.7)
==52217==    by 0x109AE0: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.7)
==52217==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==52217== 
==52217== 
==52217== Process terminating with default action of signal 11 (SIGSEGV)
==52217==  Access not within mapped region at address 0x38
==52217==    at 0x10B039: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.7)
==52217==    by 0x109AE0: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.7)
==52217==  If you believe this happened as a result of a stack
==52217==  overflow in your program's main thread (unlikely but
==52217==  possible), you can try to increase the size of the
==52217==  main thread stack using the --main-stacksize= flag.
==52217==  The main thread stack size used in this run was 8388608.
==52217== 
==52217== HEAP SUMMARY:
==52217==     in use at exit: 480 bytes in 9 blocks
==52217==   total heap usage: 77 allocs, 68 frees, 82,704 bytes allocated
==52217== 
==52217== LEAK SUMMARY:
==52217==    definitely lost: 0 bytes in 0 blocks
==52217==    indirectly lost: 0 bytes in 0 blocks
==52217==      possibly lost: 0 bytes in 0 blocks
==52217==    still reachable: 480 bytes in 9 blocks
==52217==         suppressed: 0 bytes in 0 blocks
==52217== Reachable blocks (those to which a pointer was found) are not shown.
==52217== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52217== 
==52217== For counts of detected and suppressed errors, rerun with: -v
==52217== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52245== Memcheck, a memory error detector
==52245== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52245== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52245== Command: ./test.8
==52245== Parent PID: 52244
==52245== 
==52245== Invalid read of size 8
==52245==    at 0x10B2FC: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.8)
==52245==    by 0x109AFD: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.8)
==52245==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==52245== 
==52245== 
==52245== Process terminating with default action of signal 11 (SIGSEGV)
==52245==  Access not within mapped region at address 0x50
==52245==    at 0x10B2FC: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.8)
==52245==    by 0x109AFD: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.8)
==52245==  If you believe this happened as a result of a stack
==52245==  overflow in your program's main thread (unlikely but
==52245==  possible), you can try to increase the size of the
==52245==  main thread stack using the --main-stacksize= flag.
==52245==  The main thread stack size used in this run was 8388608.
==52245== 
==52245== HEAP SUMMARY:
==52245==     in use at exit: 743 bytes in 14 blocks
==52245==   total heap usage: 157 allocs, 143 frees, 84,904 bytes allocated
==52245== 
==52245== LEAK SUMMARY:
==52245==    definitely lost: 0 bytes in 0 blocks
==52245==    indirectly lost: 0 bytes in 0 blocks
==52245==      possibly lost: 0 bytes in 0 blocks
==52245==    still reachable: 743 bytes in 14 blocks
==52245==         suppressed: 0 bytes in 0 blocks
==52245== Reachable blocks (those to which a pointer was found) are not shown.
==52245== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52245== 
==52245== For counts of detected and suppressed errors, rerun with: -v
==52245== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==52262== Memcheck, a memory error detector
==52262== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==52262== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==52262== Command: ./test.9
==52262== Parent PID: 52261
==52262== 
==52262== Invalid read of size 8
==52262==    at 0x10B374: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.9)
==52262==    by 0x109B0F: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.9)
==52262==  Address 0x58 is not stack'd, malloc'd or (recently) free'd
==52262== 
==52262== 
==52262== Process terminating with default action of signal 11 (SIGSEGV)
==52262==  Access not within mapped region at address 0x58
==52262==    at 0x10B374: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.9)
==52262==    by 0x109B0F: main (in /home/ece551db/graderbase/work/ilj3.098_bst_map.ghSriM/test.9)
==52262==  If you believe this happened as a result of a stack
==52262==  overflow in your program's main thread (unlikely but
==52262==  possible), you can try to increase the size of the
==52262==  main thread stack using the --main-stacksize= flag.
==52262==  The main thread stack size used in this run was 8388608.
==52262== 
==52262== HEAP SUMMARY:
==52262==     in use at exit: 799 bytes in 14 blocks
==52262==   total heap usage: 177 allocs, 163 frees, 85,504 bytes allocated
==52262== 
==52262== LEAK SUMMARY:
==52262==    definitely lost: 0 bytes in 0 blocks
==52262==    indirectly lost: 0 bytes in 0 blocks
==52262==      possibly lost: 0 bytes in 0 blocks
==52262==    still reachable: 799 bytes in 14 blocks
==52262==         suppressed: 0 bytes in 0 blocks
==52262== Reachable blocks (those to which a pointer was found) are not shown.
==52262== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52262== 
==52262== For counts of detected and suppressed errors, rerun with: -v
==52262== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
